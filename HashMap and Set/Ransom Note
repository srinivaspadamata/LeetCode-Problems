Given two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise.
Each letter in magazine can only be used once in ransomNote.

Example 1:
Input: ransomNote = "a", magazine = "b"
Output: false

Example 2:
Input: ransomNote = "aa", magazine = "ab"
Output: false

Example 3:
Input: ransomNote = "aa", magazine = "aab"
Output: true

Constraints:
1 <= ransomNote.length, magazine.length <= 105
ransomNote and magazine consist of lowercase English letters.

Code: Java
Time Complexity: O(N+M), where N = length of ransomNote, M = length of magazine.
Space Complexity: O(1), because we store at most 26 letters (constant space).

class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> charMap = new HashMap<>();
        int count = 0;
        for(char ch: magazine.toCharArray()){
            charMap.put(ch, 1 + charMap.getOrDefault(ch, 0));
        }

        for(char c: ransomNote.toCharArray()){
            if(!charMap.containsKey(c) || charMap.get(c) == 0){
                return false;
            }
            charMap.put(c, charMap.get(c) - 1);
        }
        return true;
    }
}
