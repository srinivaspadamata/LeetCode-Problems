Given two strings s and t, return true if t is an anagram of s, and false otherwise.

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false

Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.

Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?

Code: Java

class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length()) return false;
        int[] countArray = new int[26];

        for(char ch: s.toCharArray()){
            countArray[ch - 'a']++;
        }

        for(char c: t.toCharArray()){
            countArray[c - 'a']--;
        }

        for(int count: countArray){
            if(count != 0){
                return false;
            }
        }
        return true;
    }
}

Time Complexity: O(n)+O(n)+O(1)=O(n)
Space Complexity: O(1) (constant extra space)
