Given a string s, reverse only all the vowels in the string and return it.

The vowels are 'a', 'e', 'i', 'o', and 'u', and they can appear in both lower and upper cases, more than once.

Example 1:

Input: s = "IceCreAm"

Output: "AceCreIm"

Explanation:

The vowels in s are ['I', 'e', 'e', 'A']. On reversing the vowels, s becomes "AceCreIm".

Example 2:

Input: s = "leetcode"

Output: "leotcede"

 

Constraints:

1 <= s.length <= 3 * 105
s consist of printable ASCII characters.

Code: Java

class Solution {
    public String reverseVowels(String s) {
        ArrayList<Character> vowels = new ArrayList<>();
        List<Character> givenVowels = Arrays.asList('a','e','i','o','u','A','E','I','O','U');
        for(int i=0;i<s.length();i++){
            if(givenVowels.contains(s.charAt(i))){
                vowels.add(s.charAt(i));
            }
        }
        StringBuilder str = new StringBuilder(s);
        for(int i=0;i<str.length();i++){
            if(givenVowels.contains(s.charAt(i))){
                str.setCharAt(i, vowels.remove(vowels.size() - 1));
            }
        }
        return str.toString();
    }
}

Time Complexity → O(n)
Space Complexity → O(n) (because of StringBuilder and ArrayList storing vowels)
